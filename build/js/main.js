$(document).ready(function(){$("select.styled").customSelect(),$(".owl-carousel").owlCarousel({margin:0,loop:!0,autoWidth:!0,items:4})}),function(t){!function(t){var i=function(i,e){function s(i,e){this.defaults={slideDuration:"3000",speed:500,arrowRight:".arrow-right",arrowLeft:".arrow-left",infinite:!0,index:0,slidesVisible:1,slidesToScroll:1,arrows:!0,swipeAble:!0,pagination:!0,autoplay:!0},this.settings=t.extend({},this,this.defaults,e),this.initials={currSlide:this.settings.index,$currSlide:null,totalSlides:!1,csstransitions:!1},t.extend(this,this.initials),this.$el=t(i),this.changeSlide=t.proxy(this.changeSlide,this),this.init(),this.instanceUid=n++,console.log(n)}var n=0;return s}();i.prototype.init=function(){this.csstransitionsTest(),this.build(),this.events(),this.activate(),this.startTimer()},i.prototype.changeSlide=function(t){if(!this.throttle){this.throttle=!0,this.clearTimer();var i=this._direction(t);if(this._next(t,i)){var e=this.$el.find(".slide").eq(this.currSlide).addClass(i+" active");console.log(this.$el),this._cssAnimation(e,i)}}},i.prototype._next=function(i,e){var s=void 0!==i?t(i.currentTarget).data("index"):void 0;switch(!0){case void 0!==s:if(this.currSlide==s)return this.startTimer(),!1;this.currSlide=s;break;case"right"==e&&this.currSlide<this.totalSlides-1:this.currSlide+=this.settings.slidesToScroll;break;case"right"==e:if(0==this.settings.infinite)return this.startTimer(),!1;this.currSlide=0;break;case"left"==e&&0===this.currSlide:if(0==this.settings.infinite)return this.startTimer(),!1;this.currSlide=this.totalSlides-1;break;case"left"==e:this.currSlide-=this.settings.slidesToScroll}return!0},i.prototype._direction=function(t){return void 0!==t?void 0===t.data?"right":t.data.direction:"right"},i.prototype._cssAnimation=function(t,i){setTimeout(function(){this.$el.addClass("transition"),this.addCSSDuration(),this.$currSlide.addClass("shift-"+i)}.bind(this),100),setTimeout(function(){this.$el.removeClass("transition"),this.removeCSSDuration(),this.$currSlide.removeClass("active shift-left shift-right"),this.$currSlide=t.removeClass(i),this._updateIndicators(),this.startTimer()}.bind(this),100+this.settings.speed)},i.prototype._updateIndicators=function(){this.$el.find(".indicators li").removeClass("active").eq(this.currSlide).addClass("active")},i.prototype.csstransitionsTest=function(){var t=document.createElement("modernizr"),i=["transition","WebkitTransition","MozTransition","OTransition","msTransition"];for(var e in i){var s=i[e],n=void 0!==t.style[s]&&s;if(n){this.csstransitions=n;break}}},i.prototype.addCSSDuration=function(){var t=this;this.$el.find(".slide").each(function(){this.style[t.csstransitions+"Duration"]=t.settings.speed+"ms"})},i.prototype.removeCSSDuration=function(){var t=this;this.$el.find(".slide").each(function(){this.style[t.csstransitions+"Duration"]=""})},i.prototype.build=function(){0==this.settings.arrows&&(this.$el.find(this.settings.arrowLeft).addClass("display-none"),this.$el.find(this.settings.arrowRight).addClass("display-none"));var t=this.$el.append('<ul class="indicators" >').find(".indicators");this.totalSlides=this.$el.find(".slide").length;for(var i=0;i<this.totalSlides;i++)t.append("<li data-index="+i+">");0==this.settings.pagination&&this.$el.find(".indicators").addClass("display-none")},i.prototype.activate=function(){this.$currSlide=this.$el.find(".slide").eq(this.settings.index).addClass("active"),this.$el.find(".indicators li").eq(this.settings.index).addClass("active")},i.prototype.events=function(){this.$el.on("click",this.settings.arrowRight,{direction:"right"},this.changeSlide).on("click",this.settings.arrowLeft,{direction:"left"},this.changeSlide).on("click",".indicators li",this.changeSlide).on("swipeleft",".slide",{direction:"right"},this.changeSlide).on("swiperight",".slide",{direction:"left"},this.changeSlide)},i.prototype.clearTimer=function(){1==this.settings.autoplay&&this.timer&&clearInterval(this.timer)},i.prototype.initTimer=function(){1==this.settings.autoplay&&(this.timer=setInterval(this.changeSlide,this.settings.slideDuration))},i.prototype.startTimer=function(){1==this.settings.autoplay&&this.initTimer(),this.throttle=!1},t.fn.Slider=function(t){return this.each(function(e,s){s.Slider=new i(s,t)})}}(jQuery)}();var args={arrowRight:".arrow-right",arrowLeft:".arrow-left",speed:1e3,slideDuration:4e3};$(".carousel").Slider(args),args={speed:1e3,slideDuration:4e3,arrows:!1,autoplay:!1},$(".carousel-listing").Slider(args),function(t){"use strict";t.fn.extend({customSelect:function(i){if(void 0===document.body.style.maxHeight)return this;var e={customClass:"customSelect",mapClass:!0,mapStyle:!0},i=t.extend(e,i),s=i.customClass,n=function(i,e){var s=i.find(":selected"),n=e.children(":first"),o=s.html()||"&nbsp;";n.html(o),s.attr("disabled")?e.addClass(r("DisabledOption")):e.removeClass(r("DisabledOption")),setTimeout(function(){e.removeClass(r("Open")),t(document).off("mouseup.customSelect")},60)},r=function(t){return s+t};return this.each(function(){var e=t(this),o=t("<span />").addClass(r("Inner")),a=t("<span />");e.after(a.append(o)),a.addClass(s),i.mapClass&&a.addClass(e.attr("class")),i.mapStyle&&a.attr("style",e.attr("style")),e.addClass("hasCustomSelect").on("render.customSelect",function(){n(e,a),e.css("width","");var t=parseInt(e.outerWidth(),10)-(parseInt(a.outerWidth(),10)-parseInt(a.width(),10));a.css({display:"inline-block"});var i=a.outerHeight();e.attr("disabled")?a.addClass(r("Disabled")):a.removeClass(r("Disabled")),o.css({width:t,display:"inline-block"}),e.css({"-webkit-appearance":"menulist-button",width:a.outerWidth(),position:"absolute",opacity:0,height:i,fontSize:a.css("font-size")})}).on("change.customSelect",function(){a.addClass(r("Changed")),n(e,a)}).on("keyup.customSelect",function(t){a.hasClass(r("Open"))?13!=t.which&&27!=t.which||n(e,a):(e.trigger("blur.customSelect"),e.trigger("focus.customSelect"))}).on("mousedown.customSelect",function(){a.removeClass(r("Changed"))}).on("mouseup.customSelect",function(i){a.hasClass(r("Open"))||(t("."+r("Open")).not(a).length>0&&"undefined"!=typeof InstallTrigger?e.trigger("focus.customSelect"):(a.addClass(r("Open")),i.stopPropagation(),t(document).one("mouseup.customSelect",function(i){i.target!=e.get(0)&&t.inArray(i.target,e.find("*").get())<0?e.trigger("blur.customSelect"):n(e,a)})))}).on("focus.customSelect",function(){a.removeClass(r("Changed")).addClass(r("Focus"))}).on("blur.customSelect",function(){a.removeClass(r("Focus")+" "+r("Open"))}).on("mouseenter.customSelect",function(){a.addClass(r("Hover"))}).on("mouseleave.customSelect",function(){a.removeClass(r("Hover"))}).trigger("render.customSelect")})}})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
